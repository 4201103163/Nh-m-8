using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.SqlClient;

namespace DOAN_QLNS
{
    public partial class fmLapPhieuNhap : DevExpress.XtraEditors.XtraForm
    {
        int nhaptt, tontruocnhap;
        public fmLapPhieuNhap()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
            load_DSPN();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }
        public fmLapPhieuNhap(string ma, string ngaylap)
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            //sqlDataSource1.Fill();
            txtMaPhieu.Text = ma;
            dati.Value = Convert.ToDateTime(ngaylap);
            txtMaPhieu.Enabled = dati.Enabled = false;

            load_DSPN();
        }
        public void load_DSPN()
        {
            gCtrl_DSPN.DataSource = null;
            gView_DSPN.Columns.Clear();
            //DB_PHIEUNHAP db1 = new DB_PHIEUNHAP();
            //gCtrl_DSPN.DataSource = db1.Tim_TheoNgay("24/6/2017");
            ////txtGia.Text = dati.Text;

            string sql = "select PhieuNhap.PN_id as [Mã phiếu nhập], DSSach.Sach_id as [Mã sách], DSSach.Sach_name as [Tên sách], DSSach.Sach_theloai as [Thể loại], DSSach.Sach_tacgia as [Tác giả], CTPhieuNhap.CTPN_number as [Số lượng nhập] from ((dbo.PhieuNhap PhieuNhap inner join dbo.CTPhieuNhap CTPhieuNhap on (CTPhieuNhap.PN_id = PhieuNhap.PN_id)) inner join dbo.DSSach DSSach on (DSSach.Sach_id = CTPhieuNhap.Sach_id)) where PhieuNhap.PN_id = '" + txtMaPhieu.Text + "'";
            DBService db = new DBService();
            db.openconn();
            gCtrl_DSPN.DataSource = db.getDataReader(sql);
            db.closeconn();
        }

        private void fmLapPhieuNhap_Load(object sender, EventArgs e)
        {
            load_DSPN();
            string sql = "select * from QUYDINH";
            DBService db = new DBService();
            db.openconn();
            SqlDataReader rd = db.getDataReader(sql);
            rd.Read();
            nhaptt = rd.GetInt32(0);
            tontruocnhap = rd.GetInt32(1);
            db.closeconn();
            lblNhaptt.Text = nhaptt.ToString();
            lblTonTruocNhap.Text = tontruocnhap.ToString();
            
        }

        private void dati_ValueChanged(object sender, EventArgs e)
        {
            load_DSPN();
        }
        public bool timSach_Ma(string ma)
        {
            DB_SACH db = new DB_SACH();
            SqlDataReader rd = db.Tim_TheoMa(ma);
            if (rd.HasRows)
            {
                rd.Read();
                if (ma.Trim() == rd.GetString(0).Trim())
                {
                    //btEditMa.Text = rd.GetString(0);
                    btEditTen.Text = rd.GetString(1);
                    txtTL.Text = rd.GetString(2);
                    txtTG.Text = rd.GetString(3);
                    txtSLT.Text = rd.GetInt32(4).ToString().Trim();
                    txtGia.Text = rd.GetDouble(5).ToString().Trim();
                    return true;
                }
                // else MessageBox.Show("Không tìm thấy mã sách!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            // else MessageBox.Show("Không tìm thấy mã sách!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            return false;
        }

        private void btEditMa_ButtonPressed(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            if (!timSach_Ma(btEditMa.Text.Trim())) MessageBox.Show("Không tìm thấy mã sách!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }
        public bool timSach_Ten(string ten)
        {
            DB_SACH db = new DB_SACH();
            SqlDataReader rd = db.Tim_TheoTen(ten.Trim());
            if (rd.HasRows)
            {
                rd.Read();
                if (ten.Trim() == rd.GetString(1).Trim())
                {
                    btEditMa.Text = rd.GetString(0);
                    // btEditTen.Text = rd.GetString(1);
                    txtTL.Text = rd.GetString(2);
                    txtTG.Text = rd.GetString(3);
                    txtSLT.Text = rd.GetInt32(4).ToString().Trim();
                    txtGia.Text = rd.GetDouble(5).ToString().Trim();
                    return true;
                }
                //else MessageBox.Show("Không tìm thấy tên sách!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            //else MessageBox.Show("Không tìm thấy tên sách!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            return false;
        }

        private void btEditTen_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            if (!timSach_Ten(btEditTen.Text.Trim())) MessageBox.Show("Không tìm thấy tên sách!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void btThem_Click(object sender, EventArgs e)
        {
            if (timSach_Ma(btEditMa.Text.Trim()) == true && timSach_Ten(btEditTen.Text.Trim()) == true) // nếu sách đã có
            {
                if (txtSLN.Text != "")
                {
                    if(int.Parse(txtSLN.Text) < nhaptt || int.Parse(txtSLT.Text) < tontruocnhap)
                    {
                        MessageBox.Show("Vi phạm điều kiện trong lưu ý!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return;
                    }
                    //long newSLT = long.Parse(txtSLT.Text) + long.Parse(txtSLN.Text);
                    SACH sa = new SACH(btEditMa.Text.Trim());
                    sa.Sua_PNS(long.Parse(txtSLN.Text.Trim()));                

                    CTPHIEUNHAP ctpn = new CTPHIEUNHAP(DateTime.Now.ToString("ddMMhhmmss"), txtMaPhieu.Text.Trim(), btEditMa.Text.Trim(), int.Parse(txtSLN.Text.Trim()));
                    ctpn.Them();
                    load_DSPN();
                }
                else MessageBox.Show("Số lượng nhập của sách chưa có !", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            else // nếu sách chưa có
            {
                if (txtSLN.Text != "")
                {
                    DialogResult dr = MessageBox.Show("Sách này hiện chưa có trong nhà sách, bạn có muốn thêm sách mới vào danh sách sách?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Information);
                    if (dr != DialogResult.Yes) return;
                    if (txtGia.Text.Trim() == "") txtGia.Text = "0";
                    SACH sa = new SACH(btEditMa.Text.Trim(), btEditTen.Text.Trim(), txtTL.Text.Trim(), txtTG.Text.Trim(), long.Parse(txtSLN.Text.Trim()), float.Parse(txtGia.Text.Trim()));
                    sa.Them();
                 
                    CTPHIEUNHAP ctpn = new CTPHIEUNHAP(DateTime.Now.ToString("ddMMhhmmss"), txtMaPhieu.Text, btEditMa.Text, int.Parse(txtSLN.Text.Trim()));
                    ctpn.Them();
                    load_DSPN();
                }
                else MessageBox.Show("Số lượng nhập của sách chưa có !", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void btSua_Click(object sender, EventArgs e)
        {
            string mapn, mas, t, tl, tg, gia, sln;
            mapn = txtMaPhieu.Text;
            mas = gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Mã sách").ToString();
            t = gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Tên sách").ToString();
            tl = gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Thể loại").ToString();
            tg = gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Tác giả").ToString();
            sln = gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Số lượng nhập").ToString();
            fmCapNhapPhieuNhapSach up_pns = new fmCapNhapPhieuNhapSach(mapn, mas, t, tl, tg, sln);
            up_pns.ShowDialog();
            load_DSPN();
        }

        private void btXoa_Click(object sender, EventArgs e)
        {
            CTPHIEUNHAP ctpn = new CTPHIEUNHAP(gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Mã phiếu nhập").ToString(), gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Mã sách").ToString());
            ctpn.Xoa_mapn_mas();
            //PHIEUNHAP pn = new PHIEUNHAP(ctpn.MaCt);
            //pn.Xoa();
            SACH sa = new SACH(gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Mã sách").ToString());
            sa.Sua_SLT(long.Parse(gView_DSPN.GetRowCellValue(gView_DSPN.FocusedRowHandle, "Số lượng nhập").ToString()));
            load_DSPN();
        }

        private void btReloadDSPN_Click(object sender, EventArgs e)
        {
            load_DSPN();
        }

        private void gCtrl_DSPN_DataSourceChanged(object sender, EventArgs e)
        {
            if (gView_DSPN.SelectedRowsCount > 0)
            {
                btXoa.Enabled = btSua.Enabled = true;
            }
            else btXoa.Enabled = btSua.Enabled = false;
        }

        private void btnKetthuc_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}